// **Creates** a new task and returns it in the task field with an id
POST /create_new_task {title: string}
    // Returns a success message with a task object
    => {success:b,message: string,task: Task}
    // Returns the cause of the error in the error field
    => 500 {success:b,error:string}

// **Starts** a task and returns it in the task field with an start_date field
POST /start_task {task_id: integer}
    // Returns a success message with a task object
    => {success:b, message: string, task: Task}
    // Returns the cause of the error in the error field (for example an incorrect id)
    => 500 {success:b, error: string}


// **Resolves** a task and returns it in the task field with an price field
POST /resolve_task {task_id: integer}
    // Returns a success message with a task object
    => {success:b, message: string, task: Task}
    // Returns the cause of the error in the error field (for example an incorrect id)
    => 500 {success:b, error: string}

// **Retrieves** all tasks and returns them. Optionally a filter can be passed
// Filters are "new" , "in_progress" and "done"
GET /tasks?filter?:s
    // Returns a list of tasks and their total count
    => {success:b,"tasks":Task[],"total":integer}
    // Returns the cause of the error in the error field (for example an incorrect filter type)
    => 500 {success:b, error: string}

// **Retrieves** one task by it's id and returns it.
GET /tasks/:id:i
    // Returns the task object
    => {success:b,"task":Task}
    // Returns the cause of the error in the error field (for example an incorrect id)
    => 500 {success:b, error: string}

